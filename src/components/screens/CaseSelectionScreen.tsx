import React from 'react';
import { useSession, useProfile, useSettings } from '../../context/GameContext';
import { CASES } from '../../data/caseData';
import { SoundType } from '../../utils/AudioEngine';

export const CaseSelectionScreen: React.FC = () => {
  const { startCase } = useSession();
  const { activeProfile, logout } = useProfile();
  const { playSound } = useSettings();

  if (!activeProfile) {
    return <div className="text-center p-8">–û—à–∏–±–∫–∞: –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.</div>;
  }
  const { progress, character, name } = activeProfile;

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∑–∞–≤–µ—Ä—à–µ–Ω–æ –ª–∏ "–î–µ–ª–æ".
  const isCaseComplete = (caseId: number) => {
    const caseData = CASES.find(c => c.id === caseId);
    if (!caseData) return false;
    return (progress[caseId] || 0) >= caseData.minigames.length;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ª–∏ "–î–µ–ª–æ".
  const isUnlocked = (caseId: number) => {
    // –ü–µ—Ä–≤—ã–µ —Ç—Ä–∏ "–î–µ–ª–∞" –¥–æ—Å—Ç—É–ø–Ω—ã —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞.
    if (caseId <= 3) return true;
    // "–î–µ–ª–æ" ‚Ññ4 –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä–≤—ã—Ö —Ç—Ä—ë—Ö.
    if (caseId === 4) return isCaseComplete(1) && isCaseComplete(2) && isCaseComplete(3);
    // "–î–µ–ª–æ" ‚Ññ5 –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è "–î–µ–ª–∞" ‚Ññ4.
    if (caseId === 5) return isCaseComplete(4);
    // "–î–µ–ª–æ" ‚Ññ6 (—Ñ–∏–Ω–∞–ª—å–Ω–æ–µ) –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è "–î–µ–ª–∞" ‚Ññ5.
    if (caseId === 6) return isCaseComplete(5);
    return false;
  };
  
  const handleStartCase = (caseId: number) => {
    playSound(SoundType.BUTTON_CLICK);
    startCase(caseId);
  }

  const handleLogout = () => {
      playSound(SoundType.BUTTON_CLICK);
      logout();
  }

  return (
    <div className="flex flex-col items-center justify-center h-full p-8">
      <h2 className="text-4xl mb-2">–í–´–ë–û–† –î–ï–õ–ê</h2>
      <p className="text-lg mb-8">–ò–≥—Ä–æ–∫: {name} ({character})</p>
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 w-full">
        {CASES.map((c) => {
            const unlocked = isUnlocked(c.id);
            const currentProgress = progress[c.id] || 0;
            const totalMinigames = c.minigames.length;
            const completed = currentProgress >= totalMinigames;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∏–ª—å –∫–Ω–æ–ø–∫–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ—ë —Å–æ—Å—Ç–æ—è–Ω–∏—è.
            let btnClass = "pixel-button-locked"; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.
            if (unlocked) btnClass = "pixel-button"; // –ï—Å–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞, –Ω–æ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞.
            if (completed) btnClass = "pixel-button-completed"; // –ï—Å–ª–∏ –ø—Ä–æ–π–¥–µ–Ω–∞.
            
            return (
              <button 
                key={c.id}
                // –ù–∞—á–∞—Ç—å "–î–µ–ª–æ" –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–æ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ.
                onClick={() => unlocked && handleStartCase(c.id)} 
                disabled={!unlocked}
                className={`${btnClass} p-4 text-lg w-full h-24 flex flex-col items-center justify-center text-center`}
              >
                <span>{c.title}</span>
                <span className="text-sm opacity-80 mt-1">
                  {completed ? "‚úì –ó–ê–í–ï–†–®–ï–ù–û" : unlocked ? `(${currentProgress}/${totalMinigames})` : "üîí"}
                </span>
              </button>
            );
        })}
      </div>
      <button onClick={handleLogout} className="pixel-button p-3 text-lg mt-8 bg-red-800">
          –°–º–µ–Ω–∏—Ç—å –∏–≥—Ä–æ–∫–∞
      </button>
    </div>
  );
};